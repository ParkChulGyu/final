package hello.hellospring.repository;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import javax.sql.DataSource;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.simple.SimpleJdbcInsert;


import domain.Member;

public class jpamemberRepository implements MemberRepository{

	private final JdbcTemplate jdbcTemplate;
	
	public jpamemberRepository(DataSource dataSource) {
		jdbcTemplate = new JdbcTemplate(dataSource);
	}
	
	
	@Override
	public Member save(Member member) {
		
		SimpleJdbcInsert jdbcInsert = new SimpleJdbcInsert(jdbcTemplate);
		
		// 사용할 테이블이랑 Key 값 세팅
		jdbcInsert.withTableName("MEMBER").usingGeneratedKeyColumns("ID");
		
		//inset sql 문장대신 쓰는구간
		Map<String, Object> parameters = new HashMap<>();
		parameters.put("name", member.getName());
		
		Number key = jdbcInsert.executeAndReturnKey(new MapSqlParameterSource(parameters));
		member.setId(key.longValue());		
		return member;
	}

	@Override
	public Optional<Member> findById(Long id) {
		List<Member> result	= jdbcTemplate.query("select * from member where id = ?" , memberRowMapper() , id);
		return result.stream().findAny();
	}

	@Override
	public Optional<Member> findByName(String name) {
		List<Member> result	= jdbcTemplate.query("SELECT * FROM MEMBER WHERE NAME = ?" , memberRowMapper() ,name);
		
		return result.stream().findAny();
	}

	@Override
	public List<Member> findAll() {
		return jdbcTemplate.query("select * from MEMBER", memberRowMapper());
	}

	
	private RowMapper<Member> memberRowMapper(){
		return new RowMapper<Member>() {
			
			@Override
			public Member mapRow(ResultSet rs, int rowNum) throws SQLException {

			Member member = new Member();
			member.setId(rs.getLong("id"));
			member.setName(rs.getString("mame"));
			return member;
			
			}
		};
	}
	

}
