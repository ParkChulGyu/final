package hello.hellospring.repository;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import javax.sql.DataSource;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.simple.SimpleJdbcInsert;


import domain.Member;
import jakarta.persistence.EntityManager;

public class JpamemberRepository implements MemberRepository{

	private final EntityManager em;
	
public JpamemberRepository (EntityManager em) {
		
		this.em = em;
	}

	
	
	
	@Override
	public Member save(Member member) {
		em.persist(member); // 영구저장
		return member;
	}

	@Override
	public Optional<Member> findById(Long id) {
		Member member = em.find(Member.class , id);
		return Optional.ofNullable(member);
	}

	@Override
	public Optional<Member> findByName(String name) {
		List<Member> result = em.createQuery("select m from Member as m where m.name = :name", Member.class)
		.setParameter("name", name)
		.getResultList()
		;
		return result.stream().findAny();
	}

	@Override
	public List<Member> findAll() {
		return em.createQuery("select m from Member as m " , Member.class)
				.getResultList();
	}

	
	

}
